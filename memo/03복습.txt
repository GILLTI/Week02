복습

1. JAVA의 개발 배경
	sun 마이크로 시스템사의 제임스 고슬링 팀에 개발
	객체 지향 언어
	C언어와 c++언어를 토대로 개발됨
	
2. JAVA 언어의 특징
	다양한 운영체제에 의해 이식성이 높다
	자료 중심의 객체지향언어 (중요한 자료를 클래스로 형성해서 만듦)
	
3. 프로그램 개발 순서
	일반프로그램 : 소스파일 -> 컴파일 -> 실행파일 -> 실행 -> 컴퓨터에 나타남
	자바프로그램 : 소스파일 -> 컴파일 -> 실행파일(바이트코드).class -> 실행 -> 컴퓨터
	
	바이트코드 : 기계어와 사람언어의 중간단계 
	소스파일에서 컴파일된 바이트 코드를 다시 기계어 코드로 변환하는 작업이 필요하다
	이 작업을 JVM이 한다

4. JVM, JREM JDK
	JDK : JAVA로 만든 프로그램을 실행시켜준다	
	JRE : JVM을 포함한다. JVM을 실행할 때 필요한 라이브러리 파일 들을 가지고 있다
	JDK : JRE를 포함한다. JRE 외에 개발에 필요한 도구들을 가지고 있다(컴파일러 등)

5. 변수(Variable)
	값을 저장하는 저장공간
	반복되는 값을 관리하기 위헤(재사용)
	값에 의미를 부여하기 위해(값에 이름을 붙여준다)
	프로그램 가독성, 유지보수성을 높이기 위해
	
	자료형 변수명;
	변수명 = 값;
	자료형 변수명 = 값;			int number = 10; 							//정수형 4byte number 변수에 10이라는 정수형 값을 대입한다


6. 자료형 (DataType)
	정수형	int	4byte
		long	8byte
	실수형	double	8byte	(정밀도 때문에 기본형)
		float	4byte
	논리형	boolean	1byte
	문자형	char	2byte	''	
	문자열	String	??	""

7. 형변환(Type Casting)
	강제 형변환	
		(자료형) 값 ※ but 데이터 손실 유의※	
	자동 형변환	
		작은 값을 큰 저장공간에 갈때
		정수 + 정수 => 정수
		정수 + 실수 => 실수 
		char 에서 int 로 형변환
	다른 자료형을 문자열로 변환 
		+""(빈문자열)		5+"입니다"
	문자열로 다른 자료형으로 변환	
		클래스타입을 이용
		"10" => Integer.parseInt("10")
		"abc" => "abc".charAt(1)
	
8. 이스케이프문자
	문자열 안에서 작성한다
	\n, \t, \",\', \\

9. 출력메소드	
	print()		=> 소괄호 안에 있는 값을 콘솔창에 출력하고 줄바꿈되지 않는다
	println()	=> 소괄호 안에 있는 값을 콘솔창에 출력하고 줄바꿈이 된다
	printf()	=> 서식문자의 형식에 맞게 값을 콘솔창에 출력하고 줄바꿈이 되지 않는다
	
	자료형	형식지정자	
	int	%d	10진수 정수
		%o	8진수 정수
		%x	16진수 정수
	double	%f	실수(소수점이하 6자리까지 출력)
	char	%c	문자
	String	%s	문자열
	boolean	%s	논리형

10. 주소값
	메모리(RAM)에 저장공간이 할당되면 고유한 값이 주소값이 부여된다
	값은 변경될 수 있으나 중복은 없다
	RAM(Random Access Memory)
	