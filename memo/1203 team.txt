1. 메소드 개념  -길진수
2.정의(선언부, 구현부) -조성현
3.호출방법  -송명진
4.정의 순서 -김승현
5.오버로딩 -고현섭
 

기능을 생각한다- 숫자를 더해주는 기능

리턴타입(반환타입)을 생각한다 -> 생각이 나지 않는다면 우선 void로 작성한다

기능에 알맞은 메소드명을 작성한다 -> add, sum, pius, pringAdd...

매개변수를 생각한다

실행할 문장을 작성한다(구현부)

리턴값을 생각한다 


ex) public class MethodTest{
	public static 리턴타입(자료형 or void) 메소드명() {
		실행할 코드-로직;
		return; //리턴타입이 void일 경우 return 없음		
		}
	}

1.메소드의 역할을 정의한다
ex) 메소드가 어떤 기능을 하고 역할을 할 수 있는지
	-> 음수를 양수로, 양수를 음수로 변환

2. 리턴 타입을 결정한다(생각이 나지 않는다면 일단 void로 작성)
	-> 반환값의 유무 / 반환값이 있다면 어떤 데이터 타입인가?
	반환값 있을 때 => 데이터 타입(int,double,...)을 결정
	반환값 없을 때 => void 사용

3.매개변수를 결정한다
	-> 메소드가 작동하려면 어떤 매개변수가 필요한지/ 매개변수의 개수와 데이터 타입은 무엇인지
	매개변수의 유무에 따라 정의 해도 되고 안해도 된다.

4.메소드 이름을 결정한다
	-> 메소드의 기능을 바로 알 수 있게 작성

5.메소드의 선언부를 작성한다
	-> 리턴타입int 메소드명Method(매개변수int num) {
	//구현부
	}

6.메소드의 구현부를 작성한다
	-> 메소드 내에서 실제로 작동하는 로직작성
	








