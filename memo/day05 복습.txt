복습
	제어문 > 조건문
-조건문 if, if~else, if~else if, switch
	
	if ~ else if ~ else 문 : 조건이 2개 이상일 때 사용
	if(조건식){조건식1이 true일때 }
	else if {조건식1이 false일때
		 조건식2rk true일때
		}
	else{조건식 1,2가 false일 때 실행
		}

switch(변수 or 값){int, byte, short, String, char, enum
	case 값1 : 
		실행문;
		break;
	case 값2 :
		실행문;
		break;
	}

-if ~ if문, if ~ else if 문의 차이
	if ~ if 문 : 모든 if문의 조건식을 확인
	if ~ else if 문 : if문의 조건식이 trur else if문은 건너뛰고
			if문의 조건식이 false 일 때만 else if문의 조건식을 확인

반복문(for문 ,while문, do~while문)
-for문 : 범위가 정해져 있을 때
	for(초기식; 조건식; 증감식){
		조건식이 참인 동안 반복식행될 문장;
	}

-while문 : 조건식이 참인 동안 반복(범위를 모를 때)
	반복할때 변수를 따로 지정
	while(조건식){
		조건식이 참인 동안 반복실행될 문장;
	}

-연산자
	최 단 산 쉬 관 리 삼 대

+) 오류 상황과 해결 방법
	논리연산자를 for문에서 사용할 때 조건의 정확성과 논리적인 순서를 검토하는 것이 중요~!

  오류상황		원인				해결방법
1) 무한루프 = 	종료 조건이 항상 참으로 유지		종료조건을 명확히 설정
2) 반복문 실행 x 	초기값과 조건식이 맞지않아 반복문실행불가	초기값과 조건식을 재검토
3) 증감식 누락	증감 로직이 없어 조건식이 변하지 않음	증감식을 추가하거나 루프내부에서 증감처리
4) 논리연산자	조건식의 평가 순서가 의도와 다르게 작동	괄호를 사용해 우선순위를 명확하게 설정
   우선순위 혼동
5) 문법 오류(=,==)	조건식에 잘못된 연산자를 사용		조건에 맞는 올바른 연산자를 사용
